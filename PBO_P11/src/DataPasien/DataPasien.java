/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package DataPasien;


import DataPasien.InsertDialog;
import DataPasien.PasienEntity;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;
import javax.swing.filechooser.FileSystemView;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author User
 */
public class DataPasien extends javax.swing.JFrame {
    
    Connection conn;
    Statement stmt;
    PreparedStatement pstmt = null;

    String driver = "org.postgresql.Driver";
    String koneksi = "jdbc:postgresql://localhost:5432/PBO_P4";
    String user = "postgres";
    String password = "karina";
    InputStreamReader inputStreamReader = new InputStreamReader(System.in);
    BufferedReader input = new BufferedReader(inputStreamReader);

    public DataPasien() {
        initComponents();
        showTable();
    }
    
     public void tampilkanData() {
        try {
            Class.forName(driver);
            conn = DriverManager.getConnection(koneksi, user, password);
            stmt = conn.createStatement();

            String sql = "SELECT * FROM data_pasien ORDER BY Id_Pasien";
            ResultSet rs = stmt.executeQuery(sql);

            DefaultTableModel model = new DefaultTableModel();
            model.addColumn("ID Pasien");
            model.addColumn("Nama");
            model.addColumn("Tanggal Lahir");
            model.addColumn("Alamat");
            model.addColumn("Nomor HP");
            model.addColumn("Diagnosa");

            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getString("Id_Pasien"),
                    rs.getString("Nama_Pasien"),
                    rs.getString("Tanggal_lahir"),
                    rs.getString("Alamat"),
                    rs.getString("No_Hp"),
                    rs.getString("Diagnosa")
                });
            }

            this.Table.setModel(model);

            rs.close();
            stmt.close();
            conn.close();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Gagal memuat data: " + e.getMessage());
            e.printStackTrace();
        }
          
    }
     
 


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnInsert = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnCetak = new javax.swing.JButton();
        btnUpload = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(11, 108, 224));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanel1.setBackground(new java.awt.Color(182, 206, 192));
        jPanel1.setForeground(new java.awt.Color(182, 206, 192));

        btnInsert.setBackground(new java.awt.Color(230, 230, 230));
        btnInsert.setText("Insert");
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(230, 230, 230));
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(230, 230, 230));
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        Table.setBackground(new java.awt.Color(249, 245, 234));
        Table.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Table.setFocusable(false);
        jScrollPane1.setViewportView(Table);

        jLabel1.setBackground(new java.awt.Color(88, 104, 92));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 56)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(95, 114, 106));
        jLabel1.setText("Data Pasien");

        btnCetak.setBackground(new java.awt.Color(230, 230, 230));
        btnCetak.setText("Cetak");
        btnCetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCetakActionPerformed(evt);
            }
        });

        btnUpload.setBackground(new java.awt.Color(230, 230, 230));
        btnUpload.setText("Upload");
        btnUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 560, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(118, 118, 118))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(btnInsert)
                .addGap(18, 18, 18)
                .addComponent(btnUpdate)
                .addGap(18, 18, 18)
                .addComponent(btnDelete)
                .addGap(18, 18, 18)
                .addComponent(btnCetak)
                .addGap(18, 18, 18)
                .addComponent(btnUpload)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel1)
                .addGap(6, 6, 6)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnInsert)
                    .addComponent(btnUpdate)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnDelete)
                        .addComponent(btnCetak)
                        .addComponent(btnUpload)))
                .addContainerGap(64, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int baris = Table.getSelectedRow();
        if (baris >= 0) {
            // ambil ID Nasabah dari kolom pertama tabel
            String Id_Pasien = Table.getValueAt(baris, 0).toString();

            // panggil JDialog, kirim ID Nasabah
            DeleteDialog dialog = new DeleteDialog(this, true, Id_Pasien);
            dialog.setVisible(true);
            showTable();
        } else {
            JOptionPane.showMessageDialog(this, "Pilih data Pasien dulu!");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        int baris = Table.getSelectedRow();
        if (baris >= 0) {
            String id = Table.getValueAt(baris, 0).toString();
            String nama = Table.getValueAt(baris, 1).toString();
            java.sql.Date tanggal = java.sql.Date.valueOf(Table.getValueAt(baris, 2).toString());
            String alamat     = Table.getValueAt(baris, 3).toString();
            int noHp          = Integer.parseInt(Table.getValueAt(baris, 4).toString());
            String diagnosa   = Table.getValueAt(baris, 5).toString();

        UpdateDialog dialog = new UpdateDialog(this, true, this, id, nama, tanggal, alamat, noHp, diagnosa);
        dialog.setVisible(true);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
            InsertDialog dialog = new InsertDialog(this, true);
        dialog.setVisible(true);
    }//GEN-LAST:event_btnInsertActionPerformed

    private void btnCetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCetakActionPerformed
         JasperReport reports;

        String path = ".\\\\src\\\\DataPasien\\\\ReportDataPasien.jasper";
                try {
            try {
                Class.forName(driver);
                conn = DriverManager.getConnection(koneksi, user, password);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(DataPasien.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(DataPasien.class.getName()).log(Level.SEVERE, null, ex);
            }
            
  reports = (JasperReport) JRLoader.loadObjectFromFile(path);
JasperPrint jprint = JasperFillManager.fillReport(reports, null, conn);
            JasperViewer jviewer = new JasperViewer(jprint, false);
            jviewer.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            jviewer.setVisible(true);
        } catch (JRException ex) {
            Logger.getLogger(DataPasien.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnCetakActionPerformed

    private void btnUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadActionPerformed
        JFileChooser jfc = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
        int returnValue = jfc.showOpenDialog(null);

        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File filePilihan = jfc.getSelectedFile();
            System.out.println("yang dipilih : " + filePilihan.getAbsolutePath());

            EntityManagerFactory emf = Persistence.createEntityManagerFactory("PBO_P11PU");
            EntityManager em = emf.createEntityManager();

            try (BufferedReader br = new BufferedReader(new FileReader(filePilihan))) {
                String baris;
                String pemisah = ",";

                em.getTransaction().begin();

                while ((baris = br.readLine()) != null) {
                    String[] data = baris.split(pemisah);

                    // validasi data
                    if (data.length < 6) {
                        continue;
                    }

                    String id_pasien = data[0].trim();
                    String nama_pasien = data[1].trim();
                    String tanggalStr = data[2].trim();
                    String alamatStr = data[3].trim();
                    String noHpStr = data[4].trim();
                    String diagnosa = data[5].trim();

                if (!id_pasien.isEmpty() && !nama_pasien.isEmpty()) {
                    PasienEntity p = new PasienEntity();
                    p.setId_pasien(id_pasien);
                    p.setNama_pasien(nama_pasien);

                    // parsing tanggal lahir
                    try {
                    String tanggalBersih = tanggalStr.trim().replace("/", "-");
                    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                    Date tanggal_lahir = sdf.parse(tanggalBersih);
                    p.setTanggal_lahir(tanggal_lahir);
                    } catch (ParseException e) {
                        JOptionPane.showMessageDialog(null, "Format tanggal salah pada baris: " + baris);
                        continue;
                    }

                    p.setAlamat(alamatStr);
                    
                    // parsing nomor HP
                    try {
                        if (!noHpStr.isEmpty()) {
                            p.setNo_hp(Integer.parseInt(noHpStr));
                        }
                    } catch (NumberFormatException e) {
                        JOptionPane.showMessageDialog(null, "Nomor HP tidak valid: " + noHpStr);
                        continue;
                    }

                    
                    p.setDiagnosa(diagnosa);

                    em.persist(p);
                } else {
                    JOptionPane.showMessageDialog(null, "Data tidak lengkap: " + baris);
                }
            }

                em.getTransaction().commit();
                JOptionPane.showMessageDialog(null, "Sukses diinput");
                showTable();

            } catch (FileNotFoundException ex) {
                Logger.getLogger(DataPasien.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "File tidak ditemukan");
            } catch (IOException ex) {
                Logger.getLogger(DataPasien.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Gagal membaca file");
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Format harga tidak valid");
            } catch (Exception ex) {
                if (em.getTransaction().isActive()) {
                    em.getTransaction().rollback();
                }
                Logger.getLogger(DataPasien.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Terjadi kesalahan saat upload");
            } finally {
                em.close();
                emf.close();
            }
        }
    }//GEN-LAST:event_btnUploadActionPerformed

    public void showTable() {
        try {
            // TODO code application logi
            Class.forName(driver);
        conn = DriverManager.getConnection(koneksi, user, password);
        String sql = "SELECT * FROM Data_Pasien ORDER BY Id_Pasien";
        stmt = conn.createStatement();
        ResultSet rs = stmt.executeQuery(sql);

        this.Table.setModel(DbUtils.resultSetToTableModel(rs));

        rs.close();
        stmt.close();
        conn.close();
    } catch (ClassNotFoundException | SQLException ex) {
        Logger.getLogger(DataPasien.class.getName()).log(Level.SEVERE, null, ex);
    }
    }

    

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DataPasien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DataPasien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DataPasien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DataPasien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DataPasien().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table;
    private javax.swing.JButton btnCetak;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnUpload;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
